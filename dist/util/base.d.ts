export declare function itType(val: unknown): string;
export declare function isArray(arr: unknown): arr is unknown[];
export declare function isObject(obj: unknown): obj is object;
export declare function isString(str: unknown): str is string;
export declare function isNumber(num: unknown): num is number;
export declare function isRegExp(reg: unknown): reg is RegExp;
export declare function isBoolean(bool: unknown): bool is boolean;
export declare function isFunction(func: unknown): func is Function;
export declare function isNotEmptyArray(arr: unknown): arr is unknown[];
export declare function isNotEmptyObject(obj: unknown): obj is object;
export declare function isNotEmptyString(str: unknown): str is string;
export declare function isNotFiniteNumber(num: unknown): num is number;
export declare function isFiniteNumber(num: unknown): num is number;
export declare function isEmptyString(str: unknown): str is string;
export declare function isEmptyObject(obj: unknown): obj is object;
export declare function isEmptyArray(arr: unknown): arr is unknown[];
export declare function toDeepClone<T = unknown>(source: T, ...reset: unknown[]): T;
declare const _default: {
    itType: typeof itType;
    isArray: typeof isArray;
    isObject: typeof isObject;
    isString: typeof isString;
    isNumber: typeof isNumber;
    isRegExp: typeof isRegExp;
    isBoolean: typeof isBoolean;
    isFunction: typeof isFunction;
    isEmptyArray: typeof isEmptyArray;
    isEmptyObject: typeof isEmptyObject;
    isEmptyString: typeof isEmptyString;
    isNotEmptyArray: typeof isNotEmptyArray;
    isNotEmptyObject: typeof isNotEmptyObject;
    isNotEmptyString: typeof isNotEmptyString;
    isNotFiniteNumber: typeof isNotFiniteNumber;
    isFiniteNumber: typeof isFiniteNumber;
    toDeepClone: typeof toDeepClone;
};
export default _default;
